// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleMcRecords.Data;

#nullable disable

namespace SimpleMcRecords.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("SimpleMcRecords.Models.Achievement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.PlayerAchievement", b =>
                {
                    b.Property<long>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AchievementId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("PlayerAchievements");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Score", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Achievement", b =>
                {
                    b.HasOne("SimpleMcRecords.Models.Achievement", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.PlayerAchievement", b =>
                {
                    b.HasOne("SimpleMcRecords.Models.Achievement", "Achievement")
                        .WithMany("PlayerAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleMcRecords.Models.Player", "Player")
                        .WithMany("PlayerAchievements")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Score", b =>
                {
                    b.HasOne("SimpleMcRecords.Models.Player", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Achievement", b =>
                {
                    b.Navigation("PlayerAchievements");
                });

            modelBuilder.Entity("SimpleMcRecords.Models.Player", b =>
                {
                    b.Navigation("PlayerAchievements");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
